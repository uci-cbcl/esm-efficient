import pandas as pd


configfile: "workflow/config/config.yaml"


def model(wildcards):
    model = wildcards["model"].replace("e", "")

    if wildcards["model"].endswith("1be"):
        return config["safetensor"]["esm1b"]
    elif wildcards["model"].startswith("1ve"):
        ens = model.replace("1v", "")
        return config["safetensor"]["esm1v"].format(ens=ens)
    elif wildcards["model"].startswith("c") and wildcards["model"].endswith("e"):
        return config["safetensor"]["esmc"].format(model=model)
    elif wildcards["model"].endswith("e"):
        return config["safetensor"]["esm2"].format(model=model)
    elif wildcards["model"].startswith("c"):
        return config["esm"][model]
    elif wildcards["model"].startswith("1v"):
        ens = model.replace("1v", "")
        return config["esm"]["1v"].format(ens=ens)
    else:
        return config["esm"][model]


gpu_device = 0
model_wildcards = "model={model}_q={quantize}_co={cpuoffloading}"
finetune_wildcards = "model={model}_q={quantize}_c={checkpointing}_lora={lora}"

baseline_models = list(config["esm"].keys())
models = [f"{i}e" for i in baseline_models]
models_esm2 = [
    i
    for i in baseline_models
    if not (i.startswith("1b") or i.startswith("1v") or i.startswith("c"))
]


include: "download/Snakefile"
include: "common/Snakefile"


if not config["safetensors_download"]:

    include: "positional_emb/Snakefile"


include: "inference/Snakefile"
include: "variant/Snakefile"
include: "train/Snakefile"
include: "meltome/Snakefile"
include: "gb1_aav/Snakefile"
include: "tf/Snakefile"
include: "figures/Snakefile"


# include: "upload/Snakefile"


rule all:
    input:
        rules.all_figures.input,
